name: ci
on:
  push:
    branches:
      - master
      - develop
env:
  jdk-version: openjdk@~1.15.0
  project-name: 2P-Kt
  gradle-options: "--no-daemon --console=plain"
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
#      - &cache_jdk
      - name: Cache JDK
        uses: actions/cache@v2
        with:
          path: ~/.jabba
          key: ${{ runner.os }}-jdk-${{ env.jdk-version }}
          restore-keys: |
            ${{ runner.os }}-jdk-
            ${{ runner.os }}-

#      - &install_jdk
      - uses: battila7/jdk-via-jabba@v1
        name: Restore JDK
        with:
          jdk: ${{ env.jdk-version }}

      - name: Show Env
        run: gradle --version

  build:
    runs-on: ubuntu-latest
    needs:
      - setup
    steps:
#      - &checkout_code
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # all history

#      - *cache_jdk
      - name: Cache JDK
        uses: actions/cache@v2
        with:
          path: ~/.jabba
          key: ${{ runner.os }}-jdk-${{ env.jdk-version }}
          restore-keys: |
            ${{ runner.os }}-jdk-
            ${{ runner.os }}-

#      - *install_jdk
      - uses: battila7/jdk-via-jabba@v1
        name: Restore JDK
        with:
          jdk: ${{ env.jdk-version }}

#      - &cache_gradle
      - name: Cache Gradle Data
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            ~/.gradle/caches
            ~/gradle/wrapper
            **/build
            **/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            ${{ runner.os }}-

      - name: Setup Gradle
        run: gradle ${{ env.gradle-options }}

      - name: Check Code Style
        run: gradle ${{ env.gradle-options }} ktlintCheck --parallel

      - name: Archive KtLint Reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ktlint-reports
          path: '**/build/reports/ktlint'

      - name: Compile
        run: gradle ${{ env.gradle-options }} assemble --parallel

      - name: Test JVM
        run: gradle ${{ env.gradle-options }} jvmTest

      - name: Archive JVM Test Reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: jvm-test-reports
          path: '**/build/reports/tests/jvmTest'

      - name: Test JS
        run: gradle ${{ env.gradle-options }} jsTest

      - name: Archive JS Test Reports
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: js-test-reports
          path: '**/build/reports/tests/jsTest'

      - name: Generate Doc
        run: gradle ${{ env.gradle-options }} dokkaHtml --parallel

      - name: Generate Molti-Module Doc
        run: gradle ${{ env.gradle-options }} dokkaHtmlMultiModule --parallel

      - name: Archive Doc
        uses: actions/upload-artifact@v2
        with:
          name: api-references
          path: build/dokka/htmlMultiModule

  deploy-maven-github:
    runs-on: ubuntu-latest
    needs:
      - build
    env:
      ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
      ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
    steps:
#      - *checkout_code
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # all history
        
#      - *cache_jdk
      - name: Cache JDK
        uses: actions/cache@v2
        with:
          path: ~/.jabba
          key: ${{ runner.os }}-jdk-${{ env.jdk-version }}
          restore-keys: |
            ${{ runner.os }}-jdk-
            ${{ runner.os }}-
        
#      - *install_jdk
      - uses: battila7/jdk-via-jabba@v1
        name: Restore JDK
        with:
          jdk: ${{ env.jdk-version }}
          
#      - *cache_gradle
      - name: Cache Gradle Data
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            ~/.gradle/caches
            ~/gradle/wrapper
            **/build
            **/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            ${{ runner.os }}-
            
      - name: Sign Archives
        run: gradle ${{ env.gradle-options }} signAllPublications --parallel

      - name: Publish on GitHub Maven Repo
        run: gradle ${{ env.gradle-options }} publishAllPublicationsToMavenRepository --parallel
        env:
          ORG_GRADLE_PROJECT_sonatypeUrl: https://maven.pkg.github.com/tuProlog
          ORG_GRADLE_PROJECT_ossrhUsername: ${{ github.actor }}
          ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.GITHUB_TOKEN }}
